{"ast":null,"code":"import Piece from './piece.js';\nimport { isSameDiagonal } from '../helpers';\nexport default class Pawn extends Piece {\n  constructor(player) {\n    super(player, player === 1 ? \"https://upload.wikimedia.org/wikipedia/commons/4/45/Chess_plt45.svg\" : \"https://upload.wikimedia.org/wikipedia/commons/c/c7/Chess_pdt45.svg\");\n    this.initialPositions = {\n      1: [48, 49, 50, 51, 52, 53, 54, 55],\n      2: [8, 9, 10, 11, 12, 13, 14, 15]\n    };\n  }\n\n  isMovePossible(src, dest, isDestEnemyOccupied) {\n    if (this.player === 1) {\n      if (dest === src - 8 && !isDestEnemyOccupied || dest === src - 16 && !isDestEnemyOccupied && this.initialPositions[1].indexOf(src) !== -1) {\n        return true;\n      } else if (isDestEnemyOccupied && isSameDiagonal(src, dest) && (dest === src - 9 || dest === src - 7)) {\n        return true;\n      }\n    } else if (this.player === 2) {\n      if (dest === src + 8 && !isDestEnemyOccupied || dest === src + 16 && !isDestEnemyOccupied && this.initialPositions[2].indexOf(src) !== -1) {\n        return true;\n      } else if (isDestEnemyOccupied && isSameDiagonal(src, dest) && (dest === src + 9 || dest === src + 7)) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n  /**\n   * returns array of one if pawn moves two steps, else returns empty array  \n   * @param  {[type]} src  [description]\n   * @param  {[type]} dest [description]\n   * @return {[type]}      [description]\n   */\n\n\n  getSrcToDestPath(src, dest) {\n    if (dest === src - 16) {\n      return [src - 8];\n    } else if (dest === src + 16) {\n      return [src + 8];\n    }\n\n    return [];\n  }\n\n}","map":{"version":3,"sources":["C:/Users/littl/OneDrive/Documents/ccsechess/src/pieces/pawn.js"],"names":["Piece","isSameDiagonal","Pawn","constructor","player","initialPositions","isMovePossible","src","dest","isDestEnemyOccupied","indexOf","getSrcToDestPath"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,YAAlB;AACA,SAASC,cAAT,QAA+B,YAA/B;AAEA,eAAe,MAAMC,IAAN,SAAmBF,KAAnB,CAAyB;AACtCG,EAAAA,WAAW,CAACC,MAAD,EAAS;AAClB,UAAMA,MAAN,EAAeA,MAAM,KAAK,CAAX,GAAe,qEAAf,GAAuF,qEAAtG;AACA,SAAKC,gBAAL,GAAwB;AACtB,SAAG,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,EAAb,EAAiB,EAAjB,EAAqB,EAArB,EAAyB,EAAzB,EAA6B,EAA7B,CADmB;AAEtB,SAAG,CAAC,CAAD,EAAI,CAAJ,EAAO,EAAP,EAAW,EAAX,EAAe,EAAf,EAAmB,EAAnB,EAAuB,EAAvB,EAA2B,EAA3B;AAFmB,KAAxB;AAID;;AAEDC,EAAAA,cAAc,CAACC,GAAD,EAAMC,IAAN,EAAYC,mBAAZ,EAAiC;AAE7C,QAAI,KAAKL,MAAL,KAAgB,CAApB,EAAuB;AACrB,UAAKI,IAAI,KAAKD,GAAG,GAAG,CAAf,IAAoB,CAACE,mBAAtB,IAA+CD,IAAI,KAAKD,GAAG,GAAG,EAAf,IAAqB,CAACE,mBAAtB,IAA6C,KAAKJ,gBAAL,CAAsB,CAAtB,EAAyBK,OAAzB,CAAiCH,GAAjC,MAA0C,CAAC,CAA3I,EAA+I;AAC7I,eAAO,IAAP;AACD,OAFD,MAGK,IAAIE,mBAAmB,IAAIR,cAAc,CAACM,GAAD,EAAMC,IAAN,CAArC,KAAqDA,IAAI,KAAKD,GAAG,GAAG,CAAf,IAAoBC,IAAI,KAAKD,GAAG,GAAG,CAAxF,CAAJ,EAAgG;AACnG,eAAO,IAAP;AACD;AACF,KAPD,MAQK,IAAI,KAAKH,MAAL,KAAgB,CAApB,EAAuB;AAC1B,UAAKI,IAAI,KAAKD,GAAG,GAAG,CAAf,IAAoB,CAACE,mBAAtB,IAA+CD,IAAI,KAAKD,GAAG,GAAG,EAAf,IAAqB,CAACE,mBAAtB,IAA6C,KAAKJ,gBAAL,CAAsB,CAAtB,EAAyBK,OAAzB,CAAiCH,GAAjC,MAA0C,CAAC,CAA3I,EAA+I;AAC7I,eAAO,IAAP;AACD,OAFD,MAGK,IAAIE,mBAAmB,IAAIR,cAAc,CAACM,GAAD,EAAMC,IAAN,CAArC,KAAqDA,IAAI,KAAKD,GAAG,GAAG,CAAf,IAAoBC,IAAI,KAAKD,GAAG,GAAG,CAAxF,CAAJ,EAAgG;AACnG,eAAO,IAAP;AACD;AACF;;AACD,WAAO,KAAP;AACD;AAED;;;;;;;;AAMAI,EAAAA,gBAAgB,CAACJ,GAAD,EAAMC,IAAN,EAAY;AAC1B,QAAIA,IAAI,KAAKD,GAAG,GAAG,EAAnB,EAAuB;AACrB,aAAO,CAACA,GAAG,GAAG,CAAP,CAAP;AACD,KAFD,MAGK,IAAIC,IAAI,KAAKD,GAAG,GAAG,EAAnB,EAAuB;AAC1B,aAAO,CAACA,GAAG,GAAG,CAAP,CAAP;AACD;;AACD,WAAO,EAAP;AACD;;AA5CqC","sourcesContent":["import Piece from './piece.js';\nimport { isSameDiagonal } from '../helpers'\n\nexport default class Pawn extends Piece {\n  constructor(player) {\n    super(player, (player === 1 ? \"https://upload.wikimedia.org/wikipedia/commons/4/45/Chess_plt45.svg\" : \"https://upload.wikimedia.org/wikipedia/commons/c/c7/Chess_pdt45.svg\"));\n    this.initialPositions = {\n      1: [48, 49, 50, 51, 52, 53, 54, 55],\n      2: [8, 9, 10, 11, 12, 13, 14, 15]\n    }\n  }\n\n  isMovePossible(src, dest, isDestEnemyOccupied) {\n\n    if (this.player === 1) {\n      if ((dest === src - 8 && !isDestEnemyOccupied) || (dest === src - 16 && !isDestEnemyOccupied && this.initialPositions[1].indexOf(src) !== -1)) {\n        return true;\n      }\n      else if (isDestEnemyOccupied && isSameDiagonal(src, dest) && (dest === src - 9 || dest === src - 7)) {\n        return true;\n      }\n    }\n    else if (this.player === 2) {\n      if ((dest === src + 8 && !isDestEnemyOccupied) || (dest === src + 16 && !isDestEnemyOccupied && this.initialPositions[2].indexOf(src) !== -1)) {\n        return true;\n      }\n      else if (isDestEnemyOccupied && isSameDiagonal(src, dest) && (dest === src + 9 || dest === src + 7)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * returns array of one if pawn moves two steps, else returns empty array  \n   * @param  {[type]} src  [description]\n   * @param  {[type]} dest [description]\n   * @return {[type]}      [description]\n   */\n  getSrcToDestPath(src, dest) {\n    if (dest === src - 16) {\n      return [src - 8];\n    }\n    else if (dest === src + 16) {\n      return [src + 8];\n    }\n    return [];\n  }\n}\n"]},"metadata":{},"sourceType":"module"}