{"ast":null,"code":"import Piece from './piece.js';\nimport { isSameRow, isSameColumn, isSameDiagonal, isPathClean } from '../helpers';\nexport default class Rook extends Piece {\n  constructor(player) {\n    super(player, player === 1 ? \"https://upload.wikimedia.org/wikipedia/commons/7/72/Chess_rlt45.svg\" : \"https://upload.wikimedia.org/wikipedia/commons/f/ff/Chess_rdt45.svg\");\n  }\n\n  isMovePossible(src, dest, squares) {\n    return isPathClean(this.getSrcToDestPath(src, dest), squares) && (isSameColumn(src, dest) || isSameRow(src, dest));\n  }\n  /**\n   * get path between src and dest (src and dest exclusive)\n   * @param  {num} src  \n   * @param  {num} dest \n   * @return {[array]}      \n   */\n\n\n  getSrcToDestPath(src, dest) {\n    let path = [],\n        pathStart,\n        pathEnd,\n        incrementBy;\n\n    if (src > dest) {\n      pathStart = dest;\n      pathEnd = src;\n    } else {\n      pathStart = src;\n      pathEnd = dest;\n    }\n\n    if (Math.abs(src - dest) % 8 === 0) {\n      incrementBy = 8;\n      pathStart += 8;\n    } else {\n      incrementBy = 1;\n      pathStart += 1;\n    }\n\n    for (let i = pathStart; i < pathEnd; i += incrementBy) {\n      path.push(i);\n    }\n\n    return path;\n  }\n\n}","map":{"version":3,"sources":["C:/Users/littl/OneDrive/Documents/react-chess-master/src/pieces/rook.js"],"names":["Piece","isSameRow","isSameColumn","isSameDiagonal","isPathClean","Rook","constructor","player","isMovePossible","src","dest","squares","getSrcToDestPath","path","pathStart","pathEnd","incrementBy","Math","abs","i","push"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,YAAlB;AACA,SAASC,SAAT,EAAoBC,YAApB,EAAkCC,cAAlC,EAAkDC,WAAlD,QAAqE,YAArE;AAEA,eAAe,MAAMC,IAAN,SAAmBL,KAAnB,CAAyB;AACtCM,EAAAA,WAAW,CAACC,MAAD,EAAS;AAClB,UAAMA,MAAN,EAAeA,MAAM,KAAK,CAAX,GAAe,qEAAf,GAAuF,qEAAtG;AACD;;AAEDC,EAAAA,cAAc,CAACC,GAAD,EAAMC,IAAN,EAAYC,OAAZ,EAAqB;AACjC,WAAOP,WAAW,CAAC,KAAKQ,gBAAL,CAAsBH,GAAtB,EAA2BC,IAA3B,CAAD,EAAmCC,OAAnC,CAAX,KAA2DT,YAAY,CAACO,GAAD,EAAMC,IAAN,CAAZ,IAA2BT,SAAS,CAACQ,GAAD,EAAMC,IAAN,CAA/F,CAAP;AACD;AAED;;;;;;;;AAMAE,EAAAA,gBAAgB,CAACH,GAAD,EAAMC,IAAN,EAAY;AAC1B,QAAIG,IAAI,GAAG,EAAX;AAAA,QAAeC,SAAf;AAAA,QAA0BC,OAA1B;AAAA,QAAmCC,WAAnC;;AACA,QAAIP,GAAG,GAAGC,IAAV,EAAgB;AACdI,MAAAA,SAAS,GAAGJ,IAAZ;AACAK,MAAAA,OAAO,GAAGN,GAAV;AACD,KAHD,MAIK;AACHK,MAAAA,SAAS,GAAGL,GAAZ;AACAM,MAAAA,OAAO,GAAGL,IAAV;AACD;;AACD,QAAIO,IAAI,CAACC,GAAL,CAAST,GAAG,GAAGC,IAAf,IAAuB,CAAvB,KAA6B,CAAjC,EAAoC;AAClCM,MAAAA,WAAW,GAAG,CAAd;AACAF,MAAAA,SAAS,IAAI,CAAb;AACD,KAHD,MAIK;AACHE,MAAAA,WAAW,GAAG,CAAd;AACAF,MAAAA,SAAS,IAAI,CAAb;AACD;;AAED,SAAK,IAAIK,CAAC,GAAGL,SAAb,EAAwBK,CAAC,GAAGJ,OAA5B,EAAqCI,CAAC,IAAIH,WAA1C,EAAuD;AACrDH,MAAAA,IAAI,CAACO,IAAL,CAAUD,CAAV;AACD;;AACD,WAAON,IAAP;AACD;;AAtCqC","sourcesContent":["import Piece from './piece.js';\nimport { isSameRow, isSameColumn, isSameDiagonal, isPathClean } from '../helpers'\n\nexport default class Rook extends Piece {\n  constructor(player) {\n    super(player, (player === 1 ? \"https://upload.wikimedia.org/wikipedia/commons/7/72/Chess_rlt45.svg\" : \"https://upload.wikimedia.org/wikipedia/commons/f/ff/Chess_rdt45.svg\"));\n  }\n\n  isMovePossible(src, dest, squares) {\n    return isPathClean(this.getSrcToDestPath(src, dest), squares) && (isSameColumn(src, dest) || isSameRow(src, dest));\n  }\n\n  /**\n   * get path between src and dest (src and dest exclusive)\n   * @param  {num} src  \n   * @param  {num} dest \n   * @return {[array]}      \n   */\n  getSrcToDestPath(src, dest) {\n    let path = [], pathStart, pathEnd, incrementBy;\n    if (src > dest) {\n      pathStart = dest;\n      pathEnd = src;\n    }\n    else {\n      pathStart = src;\n      pathEnd = dest;\n    }\n    if (Math.abs(src - dest) % 8 === 0) {\n      incrementBy = 8;\n      pathStart += 8;\n    }\n    else {\n      incrementBy = 1;\n      pathStart += 1;\n    }\n\n    for (let i = pathStart; i < pathEnd; i += incrementBy) {\n      path.push(i);\n    }\n    return path;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}