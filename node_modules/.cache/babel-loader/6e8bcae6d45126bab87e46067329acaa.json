{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\littl\\\\OneDrive\\\\Documents\\\\ccsechess\\\\src\\\\components\\\\game.js\";\nimport React from 'react';\nimport '../index.css';\nimport Board from './board.js';\nimport King from '../pieces/king';\nimport FallenSoldierBlock from './fallen-soldier-block.js';\nimport initialiseChessBoard from '../helpers/board-initialiser.js';\nexport default class Game extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      squares: initialiseChessBoard(),\n      whiteFallenSoldiers: [],\n      blackFallenSoldiers: [],\n      player: 1,\n      sourceSelection: -1,\n      status: '',\n      turn: 'white'\n    };\n  }\n\n  handleClick(i) {\n    const squares = [...this.state.squares];\n\n    if (this.state.sourceSelection === -1) {\n      if (!squares[i] || squares[i].player !== this.state.player) {\n        this.setState({\n          status: \"Wrong selection. Choose player \" + this.state.player + \" pieces.\"\n        });\n\n        if (squares[i]) {\n          squares[i].style = { ...squares[i].style,\n            backgroundColor: \"\"\n          };\n        }\n      } else {\n        squares[i].style = { ...squares[i].style,\n          backgroundColor: \"RGB(111,143,114)\"\n        }; // Emerald from http://omgchess.blogspot.com/2015/09/chess-board-color-schemes.html\n\n        this.setState({\n          status: \"Choose destination for the selected piece\",\n          sourceSelection: i\n        });\n      }\n\n      return;\n    }\n\n    squares[this.state.sourceSelection].style = { ...squares[this.state.sourceSelection].style,\n      backgroundColor: \"\"\n    };\n\n    if (squares[i] && squares[i].player === this.state.player) {\n      this.setState({\n        status: \"Wrong selection. Choose valid source and destination again.\",\n        sourceSelection: -1\n      });\n    } else {\n      const whiteFallenSoldiers = [];\n      const blackFallenSoldiers = [];\n      const isDestEnemyOccupied = Boolean(squares[i]);\n      const isMovePossible = squares[this.state.sourceSelection].isMovePossible(this.state.sourceSelection, i, isDestEnemyOccupied);\n\n      if (isMovePossible) {\n        if (squares[i] !== null) {\n          if (squares[i].player === 1) {\n            whiteFallenSoldiers.push(squares[i]);\n          } else {\n            blackFallenSoldiers.push(squares[i]);\n          }\n        }\n\n        squares[i] = squares[this.state.sourceSelection];\n        squares[this.state.sourceSelection] = null;\n        const isCheckMe = this.isCheckForPlayer(squares, this.state.player);\n\n        if (isCheckMe) {\n          this.setState(oldState => ({\n            status: \"Wrong selection. Choose valid source and destination again. Now you have a check!\",\n            sourceSelection: -1\n          }));\n        } else {\n          let player = this.state.player === 1 ? 2 : 1;\n          let turn = this.state.turn === 'white' ? 'black' : 'white';\n          this.setState(oldState => ({\n            sourceSelection: -1,\n            squares,\n            whiteFallenSoldiers: [...oldState.whiteFallenSoldiers, ...whiteFallenSoldiers],\n            blackFallenSoldiers: [...oldState.blackFallenSoldiers, ...blackFallenSoldiers],\n            player,\n            status: '',\n            turn\n          }));\n        }\n      } else {\n        this.setState({\n          status: \"Wrong selection. Choose valid source and destination again.\",\n          sourceSelection: -1\n        });\n      }\n    }\n  }\n\n  getKingPosition(squares, player) {\n    return squares.reduce((acc, curr, i) => acc || //King may be only one, if we had found it, returned his position\n    curr //current squre mustn't be a null\n    && curr.getPlayer() === player && //we are looking for aspecial king \n    curr instanceof King && i, // returned position if all conditions are completed\n    null);\n  }\n\n  isCheckForPlayer(squares, player) {\n    const opponent = player === 1 ? 2 : 1;\n    const playersKingPosition = this.getKingPosition(squares, player);\n\n    const canPieceKillPlayersKing = (piece, i) => piece.isMovePossible(playersKingPosition, i, squares);\n\n    return squares.reduce((acc, curr, idx) => acc || curr && curr.getPlayer() === opponent && canPieceKillPlayersKing(curr, idx) && true, false);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"game-info\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 13\n      }\n    }, \"CCSEE Chess Club\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"Logos\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: \"https://ccse.io/wp-content/uploads/2019/03/logo_ccse-300x300.png\",\n      width: \"100px\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"img\", {\n      src: \"https://www.asiancollege.edu.ph/wp-content/uploads/2017/10/ac-logo-stacked-512-1.png?x61212\",\n      width: \"150px\",\n      margin: \"20px\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 13\n      }\n    }, \"Turn\"), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"player-turn-box\",\n      style: {\n        backgroundColor: this.state.turn\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"game\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"game-board\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Board, {\n      squares: this.state.squares,\n      onClick: i => this.handleClick(i),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 13\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"icons-attribution\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"game-status\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 9\n      }\n    }, this.state.status), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"fallen-soldier-block\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(FallenSoldierBlock, {\n      whiteFallenSoldiers: this.state.whiteFallenSoldiers,\n      blackFallenSoldiers: this.state.blackFallenSoldiers,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 16\n      }\n    }))));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/littl/OneDrive/Documents/ccsechess/src/components/game.js"],"names":["React","Board","King","FallenSoldierBlock","initialiseChessBoard","Game","Component","constructor","state","squares","whiteFallenSoldiers","blackFallenSoldiers","player","sourceSelection","status","turn","handleClick","i","setState","style","backgroundColor","isDestEnemyOccupied","Boolean","isMovePossible","push","isCheckMe","isCheckForPlayer","oldState","getKingPosition","reduce","acc","curr","getPlayer","opponent","playersKingPosition","canPieceKillPlayersKing","piece","idx","render"],"mappings":"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","sourcesContent":["import React from 'react';\n\nimport '../index.css';\nimport Board from './board.js';\nimport King from '../pieces/king'\nimport FallenSoldierBlock from './fallen-soldier-block.js';\nimport initialiseChessBoard from '../helpers/board-initialiser.js';\n\nexport default class Game extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      squares: initialiseChessBoard(),\n      whiteFallenSoldiers: [],\n      blackFallenSoldiers: [],\n      player: 1,\n      sourceSelection: -1,\n      status: '',\n      turn: 'white'\n    }\n  }\n\n  handleClick(i) {\n    const squares = [...this.state.squares];\n\n    if (this.state.sourceSelection === -1) {\n      if (!squares[i] || squares[i].player !== this.state.player) {\n        this.setState({ status: \"Wrong selection. Choose player \" + this.state.player + \" pieces.\" });\n        if (squares[i]) {\n          squares[i].style = { ...squares[i].style, backgroundColor: \"\" };\n        }\n      }\n      else {\n        squares[i].style = { ...squares[i].style, backgroundColor: \"RGB(111,143,114)\" }; // Emerald from http://omgchess.blogspot.com/2015/09/chess-board-color-schemes.html\n        this.setState({\n          status: \"Choose destination for the selected piece\",\n          sourceSelection: i\n        })\n      }\n      return\n    }\n\n    squares[this.state.sourceSelection].style = { ...squares[this.state.sourceSelection].style, backgroundColor: \"\" };\n\n    if (squares[i] && squares[i].player === this.state.player) {\n      this.setState({\n        status: \"Wrong selection. Choose valid source and destination again.\",\n        sourceSelection: -1,\n      });\n    }\n    else {\n\n      const whiteFallenSoldiers = [];\n      const blackFallenSoldiers = [];\n      const isDestEnemyOccupied = Boolean(squares[i]);\n      const isMovePossible = squares[this.state.sourceSelection].isMovePossible(this.state.sourceSelection, i, isDestEnemyOccupied);\n\n      if (isMovePossible) {\n        if (squares[i] !== null) {\n          if (squares[i].player === 1) {\n            whiteFallenSoldiers.push(squares[i]);\n          }\n          else {\n            blackFallenSoldiers.push(squares[i]);\n          }\n        }\n\n        squares[i] = squares[this.state.sourceSelection];\n        squares[this.state.sourceSelection] = null;\n\n        const isCheckMe = this.isCheckForPlayer(squares, this.state.player)\n\n        if (isCheckMe) {\n          this.setState(oldState => ({\n            status: \"Wrong selection. Choose valid source and destination again. Now you have a check!\",\n            sourceSelection: -1,\n          }))\n        } else {\n          let player = this.state.player === 1 ? 2 : 1;\n          let turn = this.state.turn === 'white' ? 'black' : 'white';\n\n          this.setState(oldState => ({\n            sourceSelection: -1,\n            squares,\n            whiteFallenSoldiers: [...oldState.whiteFallenSoldiers, ...whiteFallenSoldiers],\n            blackFallenSoldiers: [...oldState.blackFallenSoldiers, ...blackFallenSoldiers],\n            player,\n            status: '',\n            turn\n          }));\n        }\n      }\n      else {\n        this.setState({\n          status: \"Wrong selection. Choose valid source and destination again.\",\n          sourceSelection: -1,\n        });\n      }\n    }\n  }\n\n  getKingPosition(squares, player) {\n    return squares.reduce((acc, curr, i) =>\n      acc || //King may be only one, if we had found it, returned his position\n      ((curr //current squre mustn't be a null\n        && (curr.getPlayer() === player)) //we are looking for aspecial king \n        && (curr instanceof King)\n        && i), // returned position if all conditions are completed\n      null)\n  }\n\n  isCheckForPlayer(squares, player) {\n    const opponent = player === 1 ? 2 : 1\n    const playersKingPosition = this.getKingPosition(squares, player)\n    const canPieceKillPlayersKing = (piece, i) => piece.isMovePossible(playersKingPosition, i, squares)\n    return squares.reduce((acc, curr, idx) =>\n      acc ||\n      (curr &&\n        (curr.getPlayer() === opponent) &&\n        canPieceKillPlayersKing(curr, idx)\n        && true),\n      false)\n  }\n\n  render() {\n\n    return (\n      <div>\n        <div className=\"game-info\">\n            <h1>CCSEE Chess Club</h1>\n            <div className=\"Logos\">\n            <img src=\"https://ccse.io/wp-content/uploads/2019/03/logo_ccse-300x300.png\" width=\"100px\"/>\n            <img src=\"https://www.asiancollege.edu.ph/wp-content/uploads/2017/10/ac-logo-stacked-512-1.png?x61212\" width=\"150px\" margin=\"20px\"/>\n            </div>\n            \n            <h3>Turn</h3>\n            <div id=\"player-turn-box\" style={{ backgroundColor: this.state.turn }}>\n\n            </div>\n            \n\n          </div>\n        <div className=\"game\">\n          <div className=\"game-board\">\n            <Board\n              squares={this.state.squares}\n              onClick={(i) => this.handleClick(i)}\n            />\n          </div>\n          \n        </div>\n\n        <div className=\"icons-attribution\">\n        <div className=\"game-status\">{this.state.status}</div>\n\n            <div className=\"fallen-soldier-block\">\n\n              {<FallenSoldierBlock\n                whiteFallenSoldiers={this.state.whiteFallenSoldiers}\n                blackFallenSoldiers={this.state.blackFallenSoldiers}\n              />\n              }\n            </div>\n        </div>\n      </div>\n\n\n    );\n  }\n}\n\n"]},"metadata":{},"sourceType":"module"}