{"ast":null,"code":"const diagonalDictionaryTLBR = require('../dictionaries/diagonalTopLeftBottomRight.json');\n\nconst diagonalDictionaryTRBL = require('../dictionaries/diagonalTopRightBottomLeft.json');\n\nconst rowDictionary = require('../dictionaries/row.json');\n\nconst columnDictionary = require('../dictionaries/column.json');\n\nconst isSameRow = (src, dest) => {\n  return !!(rowDictionary[src] && rowDictionary[src][dest]);\n};\n\nconst isSameColumn = (src, dest) => {\n  return !!(columnDictionary[src] && columnDictionary[src][dest]);\n};\n\nconst isSameDiagonal = (src, dest) => {\n  return !!(diagonalDictionaryTLBR[src] && diagonalDictionaryTLBR[src][dest] || diagonalDictionaryTRBL[src] && diagonalDictionaryTRBL[src][dest]);\n};\n\nconst isPathClean = (srcToDestPath, squares) => srcToDestPath.reduce((acc, curr) => !squares[curr] && acc, true);\n\nmodule.exports = {\n  isSameRow,\n  isSameColumn,\n  isSameDiagonal,\n  isPathClean\n};","map":{"version":3,"sources":["C:/Users/littl/OneDrive/Documents/ccsechess/src/helpers/index.js"],"names":["diagonalDictionaryTLBR","require","diagonalDictionaryTRBL","rowDictionary","columnDictionary","isSameRow","src","dest","isSameColumn","isSameDiagonal","isPathClean","srcToDestPath","squares","reduce","acc","curr","module","exports"],"mappings":"AAAA,MAAMA,sBAAsB,GAAGC,OAAO,CAAC,iDAAD,CAAtC;;AACA,MAAMC,sBAAsB,GAAGD,OAAO,CAAC,iDAAD,CAAtC;;AACA,MAAME,aAAa,GAAGF,OAAO,CAAC,0BAAD,CAA7B;;AACA,MAAMG,gBAAgB,GAAGH,OAAO,CAAC,6BAAD,CAAhC;;AAEA,MAAMI,SAAS,GAAG,CAACC,GAAD,EAAMC,IAAN,KAAe;AAC/B,SAAO,CAAC,EAAEJ,aAAa,CAACG,GAAD,CAAb,IAAsBH,aAAa,CAACG,GAAD,CAAb,CAAmBC,IAAnB,CAAxB,CAAR;AACD,CAFD;;AAIA,MAAMC,YAAY,GAAG,CAACF,GAAD,EAAMC,IAAN,KAAe;AAClC,SAAO,CAAC,EAAEH,gBAAgB,CAACE,GAAD,CAAhB,IAAyBF,gBAAgB,CAACE,GAAD,CAAhB,CAAsBC,IAAtB,CAA3B,CAAR;AACD,CAFD;;AAIA,MAAME,cAAc,GAAG,CAACH,GAAD,EAAMC,IAAN,KAAe;AACpC,SAAO,CAAC,EAAGP,sBAAsB,CAACM,GAAD,CAAtB,IAA+BN,sBAAsB,CAACM,GAAD,CAAtB,CAA4BC,IAA5B,CAAhC,IACPL,sBAAsB,CAACI,GAAD,CAAtB,IAA+BJ,sBAAsB,CAACI,GAAD,CAAtB,CAA4BC,IAA5B,CAD1B,CAAR;AAED,CAHD;;AAKA,MAAMG,WAAW,GAAG,CAACC,aAAD,EAAgBC,OAAhB,KAA4BD,aAAa,CAACE,MAAd,CAAqB,CAACC,GAAD,EAAMC,IAAN,KAAe,CAACH,OAAO,CAACG,IAAD,CAAR,IAAkBD,GAAtD,EAA2D,IAA3D,CAAhD;;AAGAE,MAAM,CAACC,OAAP,GAAiB;AACfZ,EAAAA,SADe;AAEfG,EAAAA,YAFe;AAGfC,EAAAA,cAHe;AAIfC,EAAAA;AAJe,CAAjB","sourcesContent":["const diagonalDictionaryTLBR = require('../dictionaries/diagonalTopLeftBottomRight.json');\nconst diagonalDictionaryTRBL = require('../dictionaries/diagonalTopRightBottomLeft.json');\nconst rowDictionary = require('../dictionaries/row.json');\nconst columnDictionary = require('../dictionaries/column.json');\n\nconst isSameRow = (src, dest) => {\n  return !!(rowDictionary[src] && rowDictionary[src][dest]);\n}\n\nconst isSameColumn = (src, dest) => {\n  return !!(columnDictionary[src] && columnDictionary[src][dest]);\n}\n\nconst isSameDiagonal = (src, dest) => {\n  return !!((diagonalDictionaryTLBR[src] && diagonalDictionaryTLBR[src][dest]) ||\n    (diagonalDictionaryTRBL[src] && diagonalDictionaryTRBL[src][dest]))\n}\n\nconst isPathClean = (srcToDestPath, squares) => srcToDestPath.reduce((acc, curr) => !squares[curr] && acc, true)\n\n\nmodule.exports = {\n  isSameRow,\n  isSameColumn,\n  isSameDiagonal,\n  isPathClean\n}"]},"metadata":{},"sourceType":"module"}